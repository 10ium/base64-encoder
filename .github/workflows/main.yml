name: Encode Sublist and Update README

on:
  push:
    paths:
      - sublist.txt
  workflow_dispatch:

jobs:
  encode:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install requirements
        run: pip install requests

      - name: Process sublist and update files
        run: |
          import os
          import requests
          import base64
          from urllib.parse import urlparse
          import re

          os.makedirs('encoded', exist_ok=True)

          with open('sublist.txt', 'r') as f:
              lines = [line.strip() for line in f if line.strip()]

          filenames = []
          links_to_add = []

          for line in lines:
              if '||' in line:
                  url, custom_name = map(str.strip, line.split('||', 1))
                  filename = custom_name if custom_name.endswith('.txt') else f'{custom_name}.txt'
              else:
                  url = line
                  parsed = urlparse(url)
                  if 'githubusercontent.com' in parsed.netloc:
                      match = re.search(r'githubusercontent\.com/([^/]+)/[^/]+/.+?/([^/]+)$', url)
                      if match:
                          user, file = match.groups()
                          filename = f'{user}_{file}'
                      else:
                          filename = 'github_unknown.txt'
                  else:
                      filename = 'unnamed.txt'

              filename = filename.replace('.txt.txt', '.txt')
              filenames.append(filename)

              try:
                  r = requests.get(url, timeout=15)
                  r.raise_for_status()
                  encoded = base64.b64encode(r.content).decode('utf-8')
                  with open(f'encoded/{filename}', 'w') as out:
                      out.write(encoded)
              except Exception as e:
                  with open(f'encoded/{filename.replace(".txt", "_error.txt")}', 'w') as err:
                      err.write(f'# Error fetching {url}: {e}\n')

          # حذف فایل‌هایی که دیگه توی لیست نیستن
          current_set = set(filenames)
          for existing in os.listdir('encoded'):
              if existing.endswith('.txt') and existing not in current_set:
                  os.remove(os.path.join('encoded', existing))

          # آپدیت README
          readme_header = '## لینک اشتراک ساب‌های تبدیل شده\n'
          repo_owner = os.getenv('GITHUB_ACTOR')
          repo_name = os.getenv('GITHUB_REPOSITORY').split('/')[1]

          new_lines = [readme_header]
          for fname in sorted(filenames):
              url = f'https://raw.githubusercontent.com/{repo_owner}/{repo_name}/main/encoded/{fname}'
              new_lines.append(f'- [{fname}]({url})\n')

          with open('README.md', 'w') as readme:
              readme.writelines(new_lines)

        shell: python

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Auto: update encoded files and README" || echo "Nothing to commit"
          git push
